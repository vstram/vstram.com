.. title: Anylogic Discrete Event Simulation - Part 02
.. slug: anylogic-discrete-event-simulation-part-02
.. author: vstram
.. date: 2020-05-06 17:16:47 UTC-03:00
.. categories: en DES

I had commented in the previous article - **Anylogic Simulation of Discrete Events** - Part 01 - about a way to measure the performance of the process modeled in Anylogic 8.5.2. In this article, I will show you how this can be done.

.. TEASER_END

.. image:: /images/burned-in-time-series.jpg

.. sidebar:: Contents

    .. contents::

=========
Objective
=========

Show how to measure the performance of a process modeled in Anylogic 8.5.2. This performance will be evaluated by the time required to produce a part, and also by counting parts produced in a working day. We will use plots to show this data.

===================
Process Description
===================

1. The process is basically the same as the previous article.

==============
Considerations 
==============

1. The start of the measurement must be before the parts (raw material) enter the queue (before the ``queue`` block) and the end must be right after the parts are processed by the machine (after the ``delay`` block) );
2. The count of the parts produced must be in this same stretch of the process.
3. Since this process is designed without operators, consider uniform production performance on the machine. The time to load the machine with the parts, check, start the operation, remove and inspect the produced part is equal to zero (only the 'running' machine time is considered);

==================
Process Parameters 
==================

1. Time should be measured in minutes.
2. The working day must be ``8 hours`` = ``480 minutes``. The simulation should cover this period.

=========
Procedure 
=========

1. It's easier to start from a 'V0', that is, from a known starting point and that we know is working. This process is identical to the process described in the previous article. Thus, we will use the process modeled earlier as a starting point. Open the ``des01`` project in Anylogic. Create a new model. Assign a name, such as: ``des02``;
2. In your work area two ``Main`` tabs should appear: one blank (referring to ``des02``) and another with the previously modeled process (referring to ``des01``). Click and drag a selection rectangle, involving all blocks and links from ``des01``. Copy (Ctrl+c) and paste (Ctrl+v) in the Main of ``des02``;
3. In the ``Process Modeling Library`` palette, locate the ``Time Measure Start`` block. With the ``Main`` referring to the ``des02`` open, drag this block to the interconnection between the ``source`` and ``queue`` blocks. Make sure the connections are redone (happens automatically if you position the new block correctly);
4. Do the same with the block ``Time Measure End``, but this time place it between the blocks ``delay`` and ``sink``;
5. Position the blocks in the work area in such a way that they are slightly more distant from each other, as shown in the figure below;
6. Select the ``timeMeasureEnd`` block. In the properties window, field ``TimeMeasureStart blocks``, click the ``+`` button and select ``timeMeasureStart``. This will correctly define the stretch of the process to be considered for timing;

.. figure:: /images/des_02-a.png

    Observe the placement of the time blocks and also the ``timeMeasureEnd`` block correct configuration

7. Right-click on the ``timeMeasureEnd`` block and choose ``Create Chart -> distribution``. Size and position the generated graphic as desired. This graph will show a histogram with the distribution of the production times in the segment of the considered process.
8. Now we are going to evaluate the number of parts produced. Locate the ``Dataset`` block in the ``Analysis`` palette and drag it to the work area.
9. With the new block ``dataset`` selected, locate the field ``Vertical axis value`` in the properties window and define it as:

.. code-block:: java
    
    sink.count()

10. This instruction will count the number of parts that reach the ``sink`` block. Repeat the procedure, creating a new ``Dataset`` block, but this time define the ``Vertical axis value`` field as:

.. code-block:: java

    source.count()

11. Similarly, this instruction serves to count the parts that are generated by the ``source`` block (source of raw material). To view the information generated by the datasets we created, drag a ``Time Plot`` graph from the ``Analysis`` palette to the work area;
12. Note that the chart is filled with two sample data sets. We will use both. In the first data set, check the option ``Data set`` and define the field ``Data set:`` to ``dataset`` (which is the default name of the block we created in step 8);
13. Repeat the procedure for the second data set, but define the field ``Data set:`` to ``dataset1`` (which is the default name of the block we created in step 10);
14. When showing results, it is important to be absolutely clear on the information in the charts. To improve understanding, set the ``Title`` field in the first data set to ``Machine Production``, and the second data set to ``Delivery of Raw Material``;

.. figure:: /images/des_02-b.png

    Plot configuration

15. Finally, let's define the maximum simulation time for our process. Under ``Projects``, select the item ``Simulation: Main``. In the ``Model Time`` group, set ``Stop at specified time`` in the ``Stop:`` field. In ``Stop Time:``, define the value to 480 minutes.
16. That's it!. The model is ready to be simulated. Press ``F5`` and then click ``Run``.
17. [Optional] It may be interesting to see graphically the queue usage (number visible in the queue block). Create a new ``Dataset`` block and define the `` Vertical axis value`` field as:

.. code-block:: java

    queue.size()

18. [Optional] Drag a ``Time Plot`` graph from the ``Analysis`` palette to the work area. Set the ``Dataset`` field to ``dataset2`` (which is the default name of the block we created in step 17). Name the chart as ``Queue Size``. Remove the extra data set created: select the lower ``Dataset`` and click the 'Remove' button

===================
Process Analysis 
===================

The video below shows the recording of the simulation of the process modeled in Anylogic:

.. raw:: html

    <video src="/videos/des02.mp4" width="1094" height="738" controls preload></video>

Although simple, the process modeled in this simulation allows us to observe very interesting phenomena. Note the behavior of the ``Delivery of Raw Material`` and ``Machine Production`` curves. The latter was modeled as a constant production of 1 part per minute, while the availability of raw material was modeled randomly through an average rate of 1 part per minute. According to the book "Anylogic in Three Days":

    Rate: Used to schedule sporadic state changes with a known average time. (...) the time interval is determined by an exponential distribution parameterized with the given rate. For example, if the rate is 0.2, the intervals will have average values of 1 / 0.2 = 5 units of time

.. math::

    f(x,\lambda)=\begin{cases}
    \lambda e^{-\lambda x} & \text{ if } x \geq  0 \\ 
    0 & \text{ if } x < 0 
    \end{cases}

It is observed in the video that most of the time there is the formation of a queue of parts (the gray curve is always just above the green curve), due to the availability of parts at a pace greater than ``1`` parts by minute.  

Eventually (close to the minute ``150``), the supply of raw material cannot supply the production capacity and the green curve subtly changes its inclination to then, very quickly, get certain again slack in sending raw material. At the worst moment, the queue is around ``24`` parts, greatly delaying the measured time of the following parts entering the process. As a result, we get a final average time of ``7.71`` minutes.

The machine cannot compensate any available raw materials before the time of ``1`` minute, which ends up accumulating for the following parts. The delay in total time, therefore, refers to the small delays that accumulate over time.

The lesson that remains is that one must know the behavior (I mean, probability distribution) of each step of the process and, if it has "long tail" processes (that is, that consume a lot of time, but in a few occurrences), be able to have steps that can compensate delays in the process without significantly affecting the total production time. There is a high risk of accumulation of parts in process in the production line if it's not possible to compensate for any delays from previous stages.

If the supply of raw materials were perfect, that is, at the same pace as the production of the machine ``constant = 1 piece per minute``, there would be a production of 480 pieces. In the video we see that 462 were produced by. There is an efficiency indicator called **OEE - Overall Equipment Effectiveness**, used to "qualify and indicate the way the manufacturing operation is carried out and helps to improve the company's maintenance and production processes". It is defined as:

.. math::

    OEE=availability \times productivity \times quality

Where:

.. math::

    availability=\frac{production\, time}{available\, time} \times 100
    
.. math::

    productivity=\frac{real\, production}{theoretical\, production} \times 100
    
.. math::

    quality=\frac{quality\, production}{total\, production} \times 100

Due to the simplifications described in the Considerations Section, we have that ``availability = 100%`` and ``quality = 100%``

.. math::

    OEE = \left ( 1.0 \times \frac{462}{480} \times 1.0 \right ) \times 100 = 96.25%

An OEE of ``96.25%`` is an excellent value. However, considering that this process consists of only one step and that only the supply of raw material has a random behavior, imagine how challenging it can be to maintain this OEE in a process composed of multiple steps.

And that's it! In the next articles we will continue to bring some complexities to the modeled process. See you there!

=========
Resources
=========

1. To model the manufacturing process - https://www.anylogic.com/
2. To edit the figures - https://www.gimp.org/
3. Royalty free images - https://pt.freeimages.com
4. Video capture - https://screencast-o-matic.com/
5. AnyLogic in Three Days: Modeling and Simulation Textbook - Ilya Grigoryev - https://www.anylogic.com/resources/books/free-simulation-book-and-modeling-tutorials/
6. To edit LaTex equations online - https://www.codecogs.com/latex/eqneditor.php
7. To download the Anylogic modeled process - `Click Here </anylogic/DES02/DES02.alp>`_